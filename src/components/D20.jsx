/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 d20.glb --transform
Files: d20.glb [552.13KB] > C:\code\portfolio\infinite-dungeon\public\models\d20-transformed.glb [67.41KB] (88%)
*/
import * as THREE from 'three'
import { useImperativeHandle, useRef } from 'react'
import { useGLTF } from '@react-three/drei'

const FILE_PXLMESH_LOGO = './models/d20-compressed.glb'

useGLTF.preload(FILE_PXLMESH_LOGO)

const D20 = (props) => {
  const ref_mesh = useRef()
  const { nodes, materials } = useGLTF(FILE_PXLMESH_LOGO)

  const switchGeometry = () => {
    const d20_mesh = ref_mesh.current
    d20_mesh.geometry.dispose()
    d20_mesh.geometry = nodes.d20_red_plastic.geometry
  }

  useImperativeHandle(props.child_ref, () => ({
    switchGeometry
  }))

  return (
    <group {...props} ref={props.child_ref}>
      <mesh
        ref={ref_mesh}
        castShadow={props.castShadow}
        // geometry={nodes.d20_red_plastic.geometry}
        geometry={new THREE.IcosahedronGeometry(1.2, 0)}
        material={materials['red plastic']}
      />
    </group>
  )
}

export default D20